// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk'], (function load__zapp_user_main(dart_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const math = dart_sdk.math;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var $toString = dartx.toString;
  var $padLeft = dartx.padLeft;
  var $add = dartx.add;
  var $length = dartx.length;
  var $_get = dartx._get;
  var $compareTo = dartx.compareTo;
  var $sort = dartx.sort;
  var $fold = dartx.fold;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    JSArrayOfSong: () => (T.JSArrayOfSong = dart.constFn(_interceptors.JSArray$(main.Song)))(),
    SongAndSongToint: () => (T.SongAndSongToint = dart.constFn(dart.fnType(core.int, [main.Song, main.Song])))(),
    intAndSongToint: () => (T.intAndSongToint = dart.constFn(dart.fnType(core.int, [core.int, main.Song])))(),
    JSArrayOfPlaylist: () => (T.JSArrayOfPlaylist = dart.constFn(_interceptors.JSArray$(main.Playlist)))(),
    intAndPlaylistToint: () => (T.intAndPlaylistToint = dart.constFn(dart.fnType(core.int, [core.int, main.Playlist])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    }
  }, false);
  var C = [void 0];
  var I = ["file:///zapp/project/lib/main.dart"];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  var title$ = dart.privateName(main, "Song.title");
  var artist$ = dart.privateName(main, "Song.artist");
  var minutes$ = dart.privateName(main, "Song.minutes");
  var seconds$ = dart.privateName(main, "Song.seconds");
  main.Song = class Song extends core.Object {
    get title() {
      return this[title$];
    }
    set title(value) {
      this[title$] = value;
    }
    get artist() {
      return this[artist$];
    }
    set artist(value) {
      this[artist$] = value;
    }
    get minutes() {
      return this[minutes$];
    }
    set minutes(value) {
      this[minutes$] = value;
    }
    get seconds() {
      return this[seconds$];
    }
    set seconds(value) {
      this[seconds$] = value;
    }
    static ['_#new#tearOff'](title, artist, minutes, seconds) {
      return new main.Song.new(title, artist, minutes, seconds);
    }
    getDurationInSeconds() {
      return this.minutes * 60 + this.seconds;
    }
    display() {
      let minStr = this.minutes[$toString]()[$padLeft](2, "0");
      let secStr = this.seconds[$toString]()[$padLeft](2, "0");
      core.print(this.title + " by " + this.artist + " (" + minStr + ":" + secStr + ")");
    }
  };
  (main.Song.new = function(title, artist, minutes, seconds) {
    this[title$] = title;
    this[artist$] = artist;
    this[minutes$] = minutes;
    this[seconds$] = seconds;
    ;
  }).prototype = main.Song.prototype;
  dart.addTypeTests(main.Song);
  dart.addTypeCaches(main.Song);
  dart.setMethodSignature(main.Song, () => ({
    __proto__: dart.getMethods(main.Song.__proto__),
    getDurationInSeconds: dart.fnType(core.int, []),
    display: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(main.Song, I[0]);
  dart.setFieldSignature(main.Song, () => ({
    __proto__: dart.getFields(main.Song.__proto__),
    title: dart.fieldType(core.String),
    artist: dart.fieldType(core.String),
    minutes: dart.fieldType(core.int),
    seconds: dart.fieldType(core.int)
  }));
  var name$ = dart.privateName(main, "Playlist.name");
  var songs = dart.privateName(main, "Playlist.songs");
  main.Playlist = class Playlist extends core.Object {
    get name() {
      return this[name$];
    }
    set name(value) {
      this[name$] = value;
    }
    get songs() {
      return this[songs];
    }
    set songs(value) {
      this[songs] = value;
    }
    static ['_#new#tearOff'](name) {
      return new main.Playlist.new(name);
    }
    addSong(song) {
      this.songs[$add](song);
    }
    displaySongs() {
      core.print("Playlist: " + this.name);
      for (let song of this.songs) {
        song.display();
      }
    }
    getRandomSong() {
      return this.songs[$_get](math.Random.new().nextInt(this.songs[$length]));
    }
    sortSongsByArtist() {
      this.songs[$sort](dart.fn((a, b) => a.artist[$compareTo](b.artist), T.SongAndSongToint()));
    }
    totalDurationInSeconds() {
      return this.songs[$fold](core.int, 0, dart.fn((sum, song) => sum + song.getDurationInSeconds(), T.intAndSongToint()));
    }
  };
  (main.Playlist.new = function(name) {
    this[songs] = T.JSArrayOfSong().of([]);
    this[name$] = name;
    ;
  }).prototype = main.Playlist.prototype;
  dart.addTypeTests(main.Playlist);
  dart.addTypeCaches(main.Playlist);
  dart.setMethodSignature(main.Playlist, () => ({
    __proto__: dart.getMethods(main.Playlist.__proto__),
    addSong: dart.fnType(dart.void, [main.Song]),
    displaySongs: dart.fnType(dart.void, []),
    getRandomSong: dart.fnType(main.Song, []),
    sortSongsByArtist: dart.fnType(dart.void, []),
    totalDurationInSeconds: dart.fnType(core.int, [])
  }));
  dart.setLibraryUri(main.Playlist, I[0]);
  dart.setFieldSignature(main.Playlist, () => ({
    __proto__: dart.getFields(main.Playlist.__proto__),
    name: dart.fieldType(core.String),
    songs: dart.fieldType(core.List$(main.Song))
  }));
  var name$0 = dart.privateName(main, "MusicFestival.name");
  var stages = dart.privateName(main, "MusicFestival.stages");
  main.MusicFestival = class MusicFestival extends core.Object {
    get name() {
      return this[name$0];
    }
    set name(value) {
      this[name$0] = value;
    }
    get stages() {
      return this[stages];
    }
    set stages(value) {
      this[stages] = value;
    }
    static ['_#new#tearOff'](name) {
      return new main.MusicFestival.new(name);
    }
    addStage(stage) {
      this.stages[$add](stage);
    }
    totalFestivalDurationInSeconds() {
      return this.stages[$fold](core.int, 0, dart.fn((sum, stage) => sum + stage.totalDurationInSeconds(), T.intAndPlaylistToint()));
    }
    displayRandomSongs() {
      core.print("Random Songs:");
      for (let stage of this.stages) {
        core.print(stage.name + ": " + stage.getRandomSong().title + " by " + stage.getRandomSong().artist + " (" + dart.str(stage.getRandomSong().minutes) + ":" + stage.getRandomSong().seconds[$toString]()[$padLeft](2, "0") + ")");
      }
    }
  };
  (main.MusicFestival.new = function(name) {
    this[stages] = T.JSArrayOfPlaylist().of([]);
    this[name$0] = name;
    ;
  }).prototype = main.MusicFestival.prototype;
  dart.addTypeTests(main.MusicFestival);
  dart.addTypeCaches(main.MusicFestival);
  dart.setMethodSignature(main.MusicFestival, () => ({
    __proto__: dart.getMethods(main.MusicFestival.__proto__),
    addStage: dart.fnType(dart.void, [main.Playlist]),
    totalFestivalDurationInSeconds: dart.fnType(core.int, []),
    displayRandomSongs: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(main.MusicFestival, I[0]);
  dart.setFieldSignature(main.MusicFestival, () => ({
    __proto__: dart.getFields(main.MusicFestival.__proto__),
    name: dart.fieldType(core.String),
    stages: dart.fieldType(core.List$(main.Playlist))
  }));
  main.main = function main$0() {
    let song1 = new main.Song.new("We Made It", "Flow G", 4, 4);
    let song2 = new main.Song.new("Rapstar", "Flow G", 3, 23);
    let song3 = new main.Song.new("Gwolf", "Flow G", 5, 23);
    let song4 = new main.Song.new("Burgis", "Flow G", 4, 43);
    let song5 = new main.Song.new("Araw Araw Love", "Flow G", 4, 8);
    let mainStage = new main.Playlist.new("Main Stage");
    mainStage.addSong(song1);
    mainStage.addSong(song2);
    mainStage.addSong(song3);
    mainStage.addSong(song4);
    mainStage.addSong(song5);
    let indieStage = new main.Playlist.new("Indie Stage");
    indieStage.addSong(song1);
    indieStage.addSong(song4);
    let electronicStage = new main.Playlist.new("Electronic Stage");
    electronicStage.addSong(song2);
    electronicStage.addSong(song5);
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart"],"names":[],"mappings":"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant
  };
}));

//# sourceMappingURL=main.js.map
